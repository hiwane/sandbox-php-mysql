name: nginx

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: nginx/log directory
      run: |
        mkdir -p v1/log         && chmod 777 v1/log           && ls -la v1
        touch v1/log/error.log  && chmod 666 v1/log/error.log
        touch v1/log/access.log && chmod 666 v1/log/access.log

    - name: Build Docker image
      run: |
        docker build -t my-nginx:latest -f nginx/Dockerfile nginx

    - name: Start Nginx
      run: |
        docker run -d \
          --name my-nginx \
          -p 80:80 \
          --network host \
          -v ${{ github.workspace }}/v1:/var/www/html/v1 \
          my-nginx:latest
          # --link mysql:mysql \
          # --link php-fpm:php-fpm \
          # --link mysql:mysql \

    - name: echo env
      run: |
        pwd
        echo "@@@ ."
        ls -la
        echo "@@@ v1"
        ls -la v1
        echo "@@@ tests"
        ls -la tests
        echo "@@@ log"
        ls -la log || echo "no log"
        echo "@@@ v1/log"
        ls -la v1/log || echo "no v1/log"
    - name: echo docker env
      run: |
        echo "@@@ /etc"
        docker exec my-nginx ls -la /etc | grep php || echo "no /etc"
        echo "@@@ /etc/php"
        docker exec my-nginx ls -la /etc/php || echo "no /etc/php"
        echo "@@@ /etc/php/8.2"
        docker exec my-nginx ls -la /etc/php/8.2 || echo "no /etc/php/8.2"
        echo "@@@ /etc/php/8.2/fpm"
        docker exec my-nginx ls -la /etc/php/8.2/fpm || echo "no /etc/php/8.2/fpm"
        echo "@@@ /etc/php/8.2/fpm/conf.d"
        docker exec my-nginx ls -la /etc/php/8.2/fpm/conf.d || echo "no /etc/php/8.2/fpm/conf.d"
        echo "@@@ /etc/php/8.2/fpm/pool.d"
        docker exec my-nginx ls -la /etc/php/8.2/fpm/pool.d || echo "no /etc/php/8.2/fpm/pool.d"
        echo "@@@ /var/www/html"
        docker exec my-nginx ls -la /var/www/html || echo "no /var/www/html"
        echo "@@@ /var/www/html/v1"
        docker exec my-nginx ls -la /var/www/html/v1 || echo "no /var/www/html/v1"
    - name: cat php-fpm.conf
      run: |
        docker exec my-nginx cat /etc/php/8.2/fpm/php-fpm.conf

    - name: List running containers
      run: docker ps -a
    - name: Display nginx logs
      run: docker logs --details my-nginx
    - name: Check container status
      run: docker inspect my-nginx | grep -n Status

    - name: Check PHP-FPM socket
      run: |
        # docker exec my-nginx find / -type s
        docker exec my-nginx bash -c "ls -l /run/php/php8.2-fpm.sock" || echo "No socket found"

    - name: Check serivice / nginx and PHP-FPM status
      run: |
        docker exec my-nginx service php8.2-fpm status
        docker exec my-nginx service nginx status

    - name: Check ps / nginx and php-apm
      run: |
        docker exec my-nginx bash -c "ps aux | grep nginx"
        docker exec my-nginx bash -c "ps aux | grep php | grep fpm"

    - name: tail error.log
      run: |
        docker exec my-nginx bash -c "ls -l /var/log/nginx"
        echo "@@ ls v1/log"
        ls -l v1/log
        echo "@@ cat /log/error.log"
        cat v1/log/error.log || echo "No error.log found"
        echo "@@ cat /log/access.log"
        cat v1/log/access.log || echo "No access.log found"
        # docker exec my-nginx bash -c 'find / -name "php.*-fpm/*"'

    - name: Test connection
      run: |
        sleep 5 # Wait for nginx to fully start
        curl -f http://localhost/hoge

